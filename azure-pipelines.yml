# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*UnitTest*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'CricketServicesServiceConnection'
    appType: 'webAppLinux'
    appName: 'PitchbookingService'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'


- task: AzureAppServiceManage@0
  inputs:
    azureSubscription: 'CricketServicesServiceConnection'
    webAppName: 'PitchbookingService'
    action: 'Start Azure App Service'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*SystemTest*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'